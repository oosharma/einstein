{"version":3,"sources":["components/Navbar/Navbar.tsx","shared/colors.ts","components/VotingArea/styles.ts","components/VotingArea/VotingArea.tsx","shared/styles.ts","components/AnsweredQuestion/styles.ts","components/AnsweredQuestion/AnsweredQuestion.tsx","components/ListDisplay/ListDisplay.tsx","components/OrganizePage/OrganizePage.tsx","App.tsx","index.tsx"],"names":["Navbar","setValue","value","classes","useStyles","className","root","AppBar","position","style","backgroundColor","Toolbar","toolbar","IconButton","edge","menuButton","color","aria-label","Typography","title","variant","noWrap","Tabs","onChange","_","newValue","Tab","label","makeStyles","theme","flexGrow","marginRight","spacing","alignItems","paddingTop","alignSelf","colors","Arrow","styled","FontAwesomeIcon","ArrowContainer","Flex","VotingArea","entry","_id","votes","answer","useState","numVotes","setNumVotes","vote","direction","console","log","axios","post","then","data","flexDirection","width","minWidth","justifyContent","onClick","bind","icon","faCaretUp","faCaretDown","FlexContainer","Question","div","hasAnswer","StyledFlex","clickable","getModalStyle","top","left","transform","createStyles","paper","palette","background","border","boxShadow","shadows","padding","AnsweredQuestion","question","open","setOpen","modalStyle","Modal","aria-labelledby","aria-describedby","onClose","id","TextField","required","e","target","fullWidth","Button","disabled","marginTop","window","location","reload","ListDisplay","items","margin","borderRadius","overflow","height","map","item","key","OrganizePage","body","setBody","multiline","flex","placeholder","App","questions","setQuestions","useEffect","get","filter","isApproved","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f9df781c.chunk.js","sourcesContent":["import React, { FC, useState } from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\nimport { Tabs, Tab } from \"@material-ui/core\";\n\ninterface Props {\n  setValue: Function;\n  value: number;\n}\n\nconst Navbar: FC<Props> = ({ setValue, value }) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"sticky\" style={{ backgroundColor: \"black\" }}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography className={classes.title} variant=\"h5\" noWrap>\n            Einstein\n          </Typography>\n          <IconButton aria-label=\"search\" color=\"inherit\">\n            <SearchIcon />\n          </IconButton>\n          <IconButton\n            aria-label=\"display more actions\"\n            edge=\"end\"\n            color=\"inherit\"\n          >\n            <MoreIcon />\n          </IconButton>\n        </Toolbar>\n        <Tabs\n          value={value}\n          onChange={(_, newValue) => setValue(newValue)}\n          aria-label=\"simple tabs example\"\n        >\n          <Tab label=\"Critique\" />\n          <Tab label=\"Answer\" />\n          <Tab label=\"Organize\" />\n          <Tab label=\"Approved\" />\n        </Tabs>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default Navbar;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  toolbar: {\n    alignItems: \"flex-start\",\n    paddingTop: theme.spacing(1)\n  },\n  title: {\n    flexGrow: 1,\n    alignSelf: \"flex-start\",\n    paddingTop: 10\n  }\n}));\n","export const colors = {\n  black: \"#001514\",\n  green: \"#C2D076\",\n  pink: \"#F55759\",\n  darkPink: \"#e64980\",\n  white: \"#FFFFFF\",\n  darkBlue: \"#15aabf\",\n  lightBlue: \"rgba(255,255,255,0.9)\",\n  blueShade: \"rgba(200,200,200,0.4)\"\n};\n","import styled from \"@emotion/styled\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { colors } from \"../../shared/colors\";\nimport { Flex } from \"rebass\";\n\nexport const Arrow = styled(FontAwesomeIcon)`\n  font-size: 20px;\n  color: ${colors.darkBlue};\n`;\n\nexport const ArrowContainer = styled(Flex)`\n  flex: 1;\n  width: 100%;\n  justify-content: center;\n  align-items: center;\n\n  &:hover {\n    background-color: black;\n  }\n`;\n","import React, { FC, useState } from \"react\";\nimport { faCaretUp, faCaretDown } from \"@fortawesome/free-solid-svg-icons\";\nimport { Flex } from \"rebass\";\nimport { Arrow, ArrowContainer } from \"./styles\";\nimport { colors } from \"../../shared/colors\";\nimport axios from \"axios\";\nimport { Question } from \"../ListDisplay/types\";\n\ninterface Props {\n  entry: Question;\n}\n\nconst VotingArea: FC<Props> = ({ entry: { _id, votes, answer }, entry }) => {\n  const [numVotes, setNumVotes] = useState(votes);\n\n  const vote = (direction: number) => {\n    console.log({\n      ...entry,\n      votes: direction\n    });\n\n    setNumVotes(numVotes => numVotes + direction);\n\n    axios\n      .post(`https://warm-crag-35873.herokuapp.com/api/items/${_id}`, {\n        ...entry,\n        votes: direction\n      })\n      .then(data => console.log(data));\n  };\n\n  return answer ? (\n    <Flex\n      flexDirection=\"column\"\n      style={{\n        width: 30,\n        minWidth: 30,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        backgroundColor: colors.white\n      }}\n    >\n      <ArrowContainer onClick={vote.bind(null, 1)}>\n        <Arrow icon={faCaretUp} />\n      </ArrowContainer>\n      {numVotes}\n      <ArrowContainer onClick={vote.bind(null, -1)}>\n        <Arrow icon={faCaretDown} />\n      </ArrowContainer>\n    </Flex>\n  ) : null;\n};\n\nexport default VotingArea;\n","import styled from \"@emotion/styled\";\nimport { colors } from \"./colors\";\nimport { Flex } from \"rebass\";\n\nexport const FlexContainer = styled(Flex)`\n  margin-bottom: 10px;\n  background-color: ${colors.lightBlue};\n  border-radius: 0px 50px 50px 0px;\n  color: ${colors.black};\n`;\n","import styled from \"@emotion/styled\";\nimport { Flex } from \"rebass\";\nimport { colors } from \"../../shared/colors\";\n\nexport const Question = styled.div<{ hasAnswer?: boolean }>`\n  font-size: 26px;\n  font-weight: bold;\n  ${({ hasAnswer }) => (hasAnswer ? \"padding-bottom: 7px;\" : \"\")}\n`;\n\nexport const StyledFlex = styled(Flex)<{ clickable?: boolean }>`\n  padding: 10px;\n  border-radius: 0px 50px 50px 0px;\n  width: 100%;\n  ${({ clickable }) =>\n    clickable\n      ? `\n      justify-content: center;\n    &:hover {\n      background-color: ${colors.blueShade};\n    }\n  `\n      : \"\"}\n`;\n","import React, { FC, useState } from \"react\";\nimport VotingArea from \"../VotingArea/VotingArea\";\nimport { FlexContainer } from \"../../shared/styles\";\nimport { Question, StyledFlex } from \"./styles\";\nimport { Question as QuestionType } from \"../ListDisplay/types\";\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\nimport Modal from \"@material-ui/core/Modal\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { Button, Snackbar } from \"@material-ui/core\";\nimport axios from \"axios\";\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    paper: {\n      position: \"absolute\",\n      width: 400,\n      backgroundColor: theme.palette.background.paper,\n      border: \"2px solid #000\",\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3)\n    }\n  })\n);\n\ninterface Props {\n  clickable?: boolean;\n  question: QuestionType;\n}\n\nconst AnsweredQuestion: FC<Props> = ({\n  clickable,\n  question: { _id, answer, question },\n  question: entry\n}) => {\n  const [open, setOpen] = useState(false);\n  const close = () => setOpen(false);\n  const classes = useStyles();\n  const [modalStyle] = useState(getModalStyle);\n  const [value, setValue] = useState(\"\");\n\n  return (\n    <FlexContainer alignItems=\"stretch\">\n      <VotingArea entry={entry} />\n      <StyledFlex\n        flexDirection=\"column\"\n        clickable={clickable}\n        onClick={() => clickable && setOpen(true)}\n      >\n        <Question hasAnswer={!!answer}>{question}</Question>\n        {answer}\n      </StyledFlex>\n      <Modal\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n        open={open}\n        onClose={close}\n      >\n        <div style={modalStyle} className={classes.paper}>\n          <h2 id=\"simple-modal-title\">{question}</h2>\n          <br />\n          <TextField\n            required\n            id=\"standard-required\"\n            label=\"Required\"\n            value={value}\n            onChange={e => setValue(e.target.value)}\n            fullWidth\n          />\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            disabled={!value}\n            style={{ marginTop: 20 }}\n            onClick={() => {\n              axios\n                .post(\n                  `https://warm-crag-35873.herokuapp.com/api/items/${_id}`,\n                  { ...entry, answer: value, votes: 0 }\n                )\n                .then(data => {\n                  setOpen(false);\n                  window.location.reload(false);\n                  console.log(data);\n                });\n            }}\n          >\n            Submit\n          </Button>\n        </div>\n      </Modal>\n      {/* <Snackbar open={true} autoHideDuration={6000} onClose={() => {}}>\n        <>This is a success message!</>\n      </Snackbar> */}\n    </FlexContainer>\n  );\n};\n\nexport default AnsweredQuestion;\n","import React, { FC, useEffect, useState } from \"react\";\n// import { answeredQuestions } from \"../../shared/mockData\";\nimport AnsweredQuestion from \"../AnsweredQuestion/AnsweredQuestion\";\nimport { colors } from \"../../shared/colors\";\nimport { Question } from \"./types\";\n\ninterface Props {\n  clickable?: boolean;\n  items: Question[];\n}\n\nconst ListDisplay: FC<Props> = ({ clickable, items }) => {\n  return (\n    <div\n      style={{\n        backgroundColor: colors.darkBlue,\n        padding: 20,\n        margin: 40,\n        borderRadius: 10,\n        boxShadow: \"0 0 23px inset #00FAF8\",\n        overflow: \"scroll\",\n        height: \"575px\"\n      }}\n    >\n      {items.map(item => (\n        <AnsweredQuestion\n          clickable={clickable}\n          key={item._id}\n          question={item}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default ListDisplay;\n","import React, { FC, useState } from \"react\";\nimport { faCaretUp, faCaretDown } from \"@fortawesome/free-solid-svg-icons\";\nimport { Flex } from \"rebass\";\nimport { colors } from \"../../shared/colors\";\nimport axios from \"axios\";\nimport { Question } from \"../ListDisplay/types\";\nimport { TextField, Button } from \"@material-ui/core\";\n\ninterface Props {\n  entry?: Question;\n}\n\nconst OrganizePage: FC<Props> = () => {\n  const [body, setBody] = useState(\"\");\n\n  return (\n    <div\n      style={{\n        backgroundColor: colors.white,\n        border: `1px ${colors.blueShade} solid`,\n        padding: 20,\n        margin: 40,\n        borderRadius: 10,\n        boxShadow: \"0 0 23px inset #00FAF8\",\n        overflow: \"scroll\",\n        height: \"575px\"\n      }}\n    >\n      <TextField\n        id=\"outlined-multiline-static\"\n        label=\"Generative Text\"\n        multiline\n        onChange={e => setBody(e.target.value)}\n        fullWidth\n        style={{ flex: \"1\", justifyContent: \"flex-start\" }}\n        placeholder=\"Paste your body of text that will be used to generate question/answer pairs here.\"\n        variant=\"outlined\"\n        value={body}\n      />\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        disabled={!body}\n        style={{ marginTop: 20 }}\n        onClick={() => console.log(\"iii\")}\n      >\n        Submit\n      </Button>\n    </div>\n  );\n};\n\nexport default OrganizePage;\n","import React, { useState, useEffect } from \"react\";\nimport { answeredQuestions } from \"../src/shared/mockData\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport ListDisplay from \"./components/ListDisplay/ListDisplay\";\nimport axios from \"axios\";\nimport { Question } from \"./components/ListDisplay/types\";\nimport OrganizePage from \"./components/OrganizePage/OrganizePage\";\n\nconst App = () => {\n  const [value, setValue] = useState(0);\n  const [questions, setQuestions] = useState<Question[]>([]);\n\n  useEffect(() => {\n    axios\n      .get(\"https://warm-crag-35873.herokuapp.com/api/items/\")\n      .then(({ data }) => setQuestions(data));\n  }, []);\n\n  return (\n    <>\n      <Navbar setValue={setValue} value={value} />\n      {value === 0 && (\n        <ListDisplay items={questions.filter(({ answer }) => answer)} />\n      )}\n      {value === 1 && (\n        <ListDisplay\n          clickable\n          items={questions.filter(({ answer }) => !answer)}\n        />\n      )}\n      {value === 2 && <OrganizePage>Get Out</OrganizePage>}\n      {value === 3 && (\n        <ListDisplay items={questions.filter(({ isApproved }) => isApproved)} />\n      )}\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}